@using BevoBnB.ViewModels
@using BevoBnB.Models
@model IEnumerable<PropertyWithReviewsViewModel>
@{
    ViewData["Title"] = "Reviews";
}

<div class="space-y-8 p-6">
    <h2 class="text-2xl font-bold text-gray-900">Property Reviews</h2>

    @if (!Model.Any())
    {
        <div class="bg-white rounded-lg shadow-sm p-8 text-center">
            <p class="text-gray-500">You haven't listed any properties yet.</p>
        </div>
    }
    else
    {
        foreach (var property in Model)
        {
            <div class="bg-white rounded-xl shadow-lg overflow-hidden">
                <!-- Property Header -->
                <div class="bg-gray-50 p-6 border-b">
                    <div class="flex items-start gap-6">
                        @if (!string.IsNullOrEmpty(property.ImageUrl))
                        {
                            <img src="~/images/properties/@property.ImageUrl"
                                 alt="Property"
                                 class="w-32 h-32 object-cover rounded-lg shadow-sm" />
                        }
                        <div>
                            <h3 class="text-xl font-bold text-gray-900">Property #@property.PropertyNumber</h3>
                            <p class="text-gray-600">@property.Street</p>
                            <p class="text-gray-600">@property.City, @property.State</p>

                            <div class="mt-2 flex items-center gap-2">
                                <div class="flex gap-1">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <svg class="w-5 h-5 @(i <= property.AverageRating ? "text-yellow-400" : "text-gray-300")"
                                             fill="currentColor" viewBox="0 0 20 20">
                                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                                        </svg>
                                    }
                                </div>
                                <span class="text-sm text-gray-600">
                                    @property.AverageRating.ToString("0.0") (@property.ReviewCount @(property.ReviewCount == 1 ? "review" : "reviews"))
                                </span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Reviews Section -->
                <div class="divide-y divide-gray-200">
                    @if (!property.Reviews.Any())
                    {
                        <div class="p-6 text-center text-gray-500">
                            <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                      d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                            </svg>
                            <p class="mt-2 text-sm">No reviews yet</p>
                        </div>
                    }
                    else
                    {
                        foreach (var review in property.Reviews)
                        {
                            <div class="p-6 hover:bg-gray-50 transition-colors">
                                <div class="flex justify-between items-start mb-4">
                                    <div class="flex items-start gap-4">
                                        <div class="w-10 h-10 rounded-full bg-blue-100 flex items-center justify-center">
                                            <span class="text-blue-600 font-semibold">
                                                @review.CustomerName.Substring(0, 1)
                                            </span>
                                        </div>
                                        <div>
                                            <h4 class="font-medium text-gray-900">@review.CustomerName</h4>
                                            <p class="text-sm text-gray-500">@review.CreatedDate.ToString("MMMM dd, yyyy")</p>
                                            <div class="flex gap-1 mt-1">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <svg class="w-4 h-4 @(i <= review.Rating ? "text-yellow-400" : "text-gray-300")"
                                                         fill="currentColor" viewBox="0 0 20 20">
                                                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                                                    </svg>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <span class="px-2.5 py-0.5 rounded-full text-xs font-medium
                                        @(review.DisputeStatus == DisputeStatus.None ? "bg-green-100 text-green-800" :
                                        review.DisputeStatus == DisputeStatus.Disputed ? "bg-yellow-100 text-yellow-800" :
                                        "bg-blue-100 text-blue-800")">
                                        @review.DisputeStatus
                                    </span>
                                </div>

                                @if (!string.IsNullOrEmpty(review.ReviewText))
                                {
                                    <div class="ml-14">
                                        <p class="text-gray-900">@review.ReviewText</p>
                                    </div>
                                }

                                @if (!string.IsNullOrEmpty(review.HostComments))
                                {
                                    <div class="ml-14 mt-4 bg-gray-50 p-4 rounded-lg">
                                        <p class="text-sm font-medium text-gray-900">Your Response:</p>
                                        <p class="mt-1 text-gray-700">@review.HostComments</p>
                                    </div>
                                }

                                @if (review.DisputeStatus == DisputeStatus.None)
                                {
                                    <div class="ml-14 mt-4">
                                        <button onclick="showDisputeForm(@review.ReviewID)"
                                                class="inline-flex items-center px-3 py-1.5 border border-transparent text-sm font-medium rounded-md text-yellow-700 bg-yellow-100 hover:bg-yellow-200">
                                            <svg class="mr-1.5 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                      d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                                            </svg>
                                            Dispute Review
                                        </button>

                                        <div id="disputeForm-@review.ReviewID" class="hidden mt-4">
                                            <form asp-action="DisputeReview" asp-route-id="@review.ReviewID" method="post">
                                                @Html.AntiForgeryToken()
                                                <div class="space-y-4">
                                                    <textarea name="disputeReason" rows="3" required
                                                              class="block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                                                              placeholder="Enter reason for dispute..."></textarea>
                                                    <div class="flex justify-end gap-2">
                                                        <button type="button" onclick="hideDisputeForm(@review.ReviewID)"
                                                                class="px-3 py-1.5 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50">
                                                            Cancel
                                                        </button>
                                                        <button type="submit"
                                                                class="px-3 py-1.5 text-sm font-medium text-white bg-yellow-600 rounded-md hover:bg-yellow-700">
                                                            Submit Dispute
                                                        </button>
                                                    </div>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    }
                </div>
            </div>
        }
    }
</div>

    <script>
        function showDisputeForm(reviewId) {
            document.getElementById(`disputeForm-${reviewId}`).classList.remove('hidden');
        }

        function hideDisputeForm(reviewId) {
            document.getElementById(`disputeForm-${reviewId}`).classList.add('hidden');
        }
    </script>